diff -ru conduit-1.2.12.orig/Data/Conduit/Internal/Conduit.hs conduit-1.2.12/Data/Conduit/Internal/Conduit.hs
--- conduit-1.2.12.orig/Data/Conduit/Internal/Conduit.hs	2017-05-19 18:38:16.000000000 +0200
+++ conduit-1.2.12/Data/Conduit/Internal/Conduit.hs	2017-09-17 10:47:51.382511075 +0200
@@ -102,6 +102,9 @@
 import Control.Monad.Primitive (PrimMonad, PrimState, primitive)
 import Data.Void (Void, absurd)
 import Data.Monoid (Monoid (mappend, mempty))
+#if MIN_VERSION_base(4,9,0)
+import Data.Semigroup
+#endif
 import Control.Monad.Trans.Resource
 import qualified Data.IORef as I
 import Control.Monad.Morph (MFunctor (..))
@@ -247,11 +250,19 @@
     liftResourceT = lift . liftResourceT
     {-# INLINE liftResourceT #-}
 
+#if MIN_VERSION_base(4,9,0)
+instance Monad m => Semigroup (ConduitM i o m ()) where
+    (<>) = (>>)
+    {-# INLINE (<>) #-}
+#endif
+
 instance Monad m => Monoid (ConduitM i o m ()) where
     mempty = return ()
     {-# INLINE mempty #-}
+#if !(MIN_VERSION_base(4,11,0))
     mappend = (>>)
     {-# INLINE mappend #-}
+#endif
 
 instance PrimMonad m => PrimMonad (ConduitM i o m) where
   type PrimState (ConduitM i o m) = PrimState m
diff -ru conduit-1.2.12.orig/Data/Conduit/Internal/Pipe.hs conduit-1.2.12/Data/Conduit/Internal/Pipe.hs
--- conduit-1.2.12.orig/Data/Conduit/Internal/Pipe.hs	2017-04-19 15:32:04.000000000 +0200
+++ conduit-1.2.12/Data/Conduit/Internal/Pipe.hs	2017-09-17 10:47:51.382511075 +0200
@@ -59,6 +59,9 @@
 import Control.Monad.Primitive (PrimMonad, PrimState, primitive)
 import Data.Void (Void, absurd)
 import Data.Monoid (Monoid (mappend, mempty))
+#if MIN_VERSION_base(4,9,0)
+import Data.Semigroup
+#endif
 import Control.Monad.Trans.Resource
 import qualified GHC.Exts
 import Control.Monad.Morph (MFunctor (..))
@@ -151,11 +154,19 @@
         go (HaveOutput p c o) = HaveOutput (go p) c o
     {-# INLINE catch #-}
 
+#if MIN_VERSION_base(4,9,0)
+instance Monad m => Semigroup (Pipe l i o u m ()) where
+    (<>) = (>>)
+    {-# INLINE (<>) #-}
+#endif
+
 instance Monad m => Monoid (Pipe l i o u m ()) where
     mempty = return ()
     {-# INLINE mempty #-}
+#if MIN_VERSION_base(4,11,0)
     mappend = (>>)
     {-# INLINE mappend #-}
+#endif
 
 instance PrimMonad m => PrimMonad (Pipe l i o u m) where
   type PrimState (Pipe l i o u m) = PrimState m
