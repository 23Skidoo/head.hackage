commit e88729b64b06ef7cba4443c52cf8d75419c3aa2c
Author: Ryan Scott <ryan.gl.scott@gmail.com>
Date:   Sat Dec 29 17:47:50 2018 -0500

    Allow building with template-haskell-2.15.0.0

diff --git a/src/Data/SafeCopy/Derive.hs b/src/Data/SafeCopy/Derive.hs
index ef58748..50aab3d 100644
--- a/src/Data/SafeCopy/Derive.hs
+++ b/src/Data/SafeCopy/Derive.hs
@@ -259,19 +259,29 @@ internalDeriveSafeCopy' deriveType versionId kindName tyName info = do
     FamilyI _ insts -> do
       decs <- forM insts $ \inst ->
         case inst of
+#if MIN_VERSION_template_haskell(2,15,0)
+          DataInstD context _ nty _kind cons _derivs ->
+              worker' (return nty) context [] (zip [0..] cons)
+#else
 #if MIN_VERSION_template_haskell(2,11,0)
           DataInstD context _name ty _kind cons _derivs ->
 #else
           DataInstD context _name ty cons _derivs ->
 #endif
               worker' (foldl appT (conT tyName) (map return ty)) context [] (zip [0..] cons)
+#endif
 
+#if MIN_VERSION_template_haskell(2,15,0)
+          NewtypeInstD context _ nty _kind con _derivs ->
+              worker' (return nty) context [] [(0, con)]
+#else
 #if MIN_VERSION_template_haskell(2,11,0)
           NewtypeInstD context _name ty _kind con _derivs ->
 #else
           NewtypeInstD context _name ty con _derivs ->
 #endif
               worker' (foldl appT (conT tyName) (map return ty)) context [] [(0, con)]
+#endif
           _ -> fail $ "Can't derive SafeCopy instance for: " ++ show (tyName, inst)
       return $ concat decs
     _ -> fail $ "Can't derive SafeCopy instance for: " ++ show (tyName, info)
@@ -305,6 +315,13 @@ internalDeriveSafeCopyIndexedType' deriveType versionId kindName tyName tyIndex'
     FamilyI _ insts -> do
       decs <- forM insts $ \inst ->
         case inst of
+#if MIN_VERSION_template_haskell(2,15,0)
+          DataInstD context _ nty _kind cons _derivs
+            | nty == foldl AppT (ConT tyName) tyIndex ->
+              worker' (return nty) context [] (zip [0..] cons)
+            | otherwise ->
+              return []
+#else
 #if MIN_VERSION_template_haskell(2,11,0)
           DataInstD context _name ty _kind cons _derivs
 #else
@@ -314,7 +331,15 @@ internalDeriveSafeCopyIndexedType' deriveType versionId kindName tyName tyIndex'
               worker' (foldl appT (conT tyName) (map return ty)) context [] (zip [0..] cons)
             | otherwise ->
               return []
+#endif
 
+#if MIN_VERSION_template_haskell(2,15,0)
+          NewtypeInstD context _ nty _kind con _derivs
+            | nty == foldl AppT (ConT tyName) tyIndex ->
+              worker' (return nty) context [] [(0, con)]
+            | otherwise ->
+              return []
+#else
 #if MIN_VERSION_template_haskell(2,11,0)
           NewtypeInstD context _name ty _kind con _derivs
 #else
@@ -324,6 +349,7 @@ internalDeriveSafeCopyIndexedType' deriveType versionId kindName tyName tyIndex'
               worker' (foldl appT (conT tyName) (map return ty)) context [] [(0, con)]
             | otherwise ->
               return []
+#endif
           _ -> fail $ "Can't derive SafeCopy instance for: " ++ show (tyName, inst)
       return $ concat decs
     _ -> fail $ "Can't derive SafeCopy instance for: " ++ show (tyName, info)
