From 48bd5329b265c2b4d584a46ab5f486d8309d569a Mon Sep 17 00:00:00 2001
From: Ryan Scott <ryan.gl.scott@gmail.com>
Date: Fri, 8 Sep 2017 19:40:21 -0400
Subject: [PATCH] =?UTF-8?q?Adapt=20to=20the=20Semigroup=E2=80=93Monoid=20P?=
 =?UTF-8?q?roposal=20(#58)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 CHANGELOG.markdown            |  4 ++++
 profunctors.cabal             |  1 +
 src/Data/Profunctor/Closed.hs | 11 ++++++++---
 src/Data/Profunctor/Strong.hs |  9 +++++++--
 4 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/CHANGELOG.markdown b/CHANGELOG.markdown
index 7b3cedc7..5882816d 100644
--- a/CHANGELOG.markdown
+++ b/CHANGELOG.markdown
@@ -1,3 +1,7 @@
+next
+----
+* Add `Semigroup` instances for `Closure` and `Tambara`
+
 5.2.1
 -----
 * Allow `base-orphans-0.6`.
diff --git a/profunctors.cabal b/profunctors.cabal
index fde49928..362e25c6 100644
--- a/profunctors.cabal
+++ b/profunctors.cabal
@@ -35,6 +35,7 @@ library
     comonad             >= 4     && < 6,
     contravariant       >= 1     && < 2,
     distributive        >= 0.4.4 && < 1,
+    semigroups          >= 0.11  && < 0.19,
     tagged              >= 0.4.4 && < 1,
     transformers        >= 0.2   && < 0.6
 
diff --git a/src/Data/Profunctor/Closed.hs b/src/Data/Profunctor/Closed.hs
index bb4447d5..06f88f28 100644
--- a/src/Data/Profunctor/Closed.hs
+++ b/src/Data/Profunctor/Closed.hs
@@ -34,12 +34,12 @@ import Control.Comonad
 import Data.Bifunctor.Product (Product(..))
 import Data.Bifunctor.Tannen (Tannen(..))
 import Data.Distributive
-import Data.Monoid hiding (Product)
 import Data.Profunctor.Adjunction
 import Data.Profunctor.Monad
 import Data.Profunctor.Strong
 import Data.Profunctor.Types
 import Data.Profunctor.Unsafe
+import Data.Semigroup hiding (Product)
 import Data.Tagged
 import Data.Tuple
 import Prelude hiding ((.),id)
@@ -155,9 +155,14 @@ instance (Profunctor p, ArrowPlus p) => Alternative (Closure p a) where
   empty = zeroArrow
   f <|> g = f <+> g
 
-instance (Profunctor p, Arrow p, Monoid b) => Monoid (Closure p a b) where
+instance (Profunctor p, Arrow p, Semigroup b) => Semigroup (Closure p a b) where
+  (<>) = liftA2 (<>)
+
+instance (Profunctor p, Arrow p, Semigroup b, Monoid b) => Monoid (Closure p a b) where
   mempty = pure mempty
-  mappend = liftA2 mappend
+#if !(MIN_VERSION_base(4,11,0))
+  mappend = (<>)
+#endif
 
 -- |
 -- @
diff --git a/src/Data/Profunctor/Strong.hs b/src/Data/Profunctor/Strong.hs
index a36ca2a5..bde9bf11 100644
--- a/src/Data/Profunctor/Strong.hs
+++ b/src/Data/Profunctor/Strong.hs
@@ -44,11 +44,11 @@ import Data.Bifunctor.Clown (Clown(..))
 import Data.Bifunctor.Product (Product(..))
 import Data.Bifunctor.Tannen (Tannen(..))
 import Data.Functor.Contravariant (Contravariant(..))
-import Data.Monoid hiding (Product)
 import Data.Profunctor.Adjunction
 import Data.Profunctor.Monad
 import Data.Profunctor.Types
 import Data.Profunctor.Unsafe
+import Data.Semigroup hiding (Product)
 import Data.Tagged
 import Data.Tuple
 import Prelude hiding (id,(.))
@@ -226,9 +226,14 @@ instance (Profunctor p, ArrowPlus p) => Alternative (Tambara p a) where
   empty = zeroArrow
   f <|> g = f <+> g
 
+instance ArrowPlus p => Semigroup (Tambara p a b) where
+  f <> g = f <+> g
+
 instance ArrowPlus p => Monoid (Tambara p a b) where
   mempty = zeroArrow
-  mappend f g = f <+> g
+#if !(MIN_VERSION_base(4,11,0))
+  mappend = (<>)
+#endif
 
 -- |
 -- @
