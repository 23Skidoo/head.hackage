diff -ru pipes-concurrency-2.0.8.orig/pipes-concurrency.cabal pipes-concurrency-2.0.8/pipes-concurrency.cabal
--- pipes-concurrency-2.0.8.orig/pipes-concurrency.cabal	2017-09-03 20:26:05.000000000 +0200
+++ pipes-concurrency-2.0.8/pipes-concurrency.cabal	2017-09-17 11:32:32.531659094 +0200
@@ -34,6 +34,7 @@
         base          >= 4       && < 5  ,
         async         >= 2.0.0.0 && < 2.2,
         contravariant >= 1.3.3   && < 1.5,
+        semigroups    >= 0.18    && < 0.19,
         pipes         >= 4.0     && < 4.4,
         stm           >= 2.4.3   && < 2.5,
         void          >= 0.6     && < 1
diff -ru pipes-concurrency-2.0.8.orig/src/Pipes/Concurrent.hs pipes-concurrency-2.0.8/src/Pipes/Concurrent.hs
--- pipes-concurrency-2.0.8.orig/src/Pipes/Concurrent.hs	2017-09-03 20:26:05.000000000 +0200
+++ pipes-concurrency-2.0.8/src/Pipes/Concurrent.hs	2017-09-17 11:32:32.531659094 +0200
@@ -1,6 +1,6 @@
 -- | Asynchronous communication between pipes
 
-{-# LANGUAGE RankNTypes, Safe #-}
+{-# LANGUAGE CPP, RankNTypes, Safe #-}
 
 module Pipes.Concurrent (
     -- * Inputs and Outputs
@@ -39,6 +39,7 @@
 import Data.Functor.Contravariant.Divisible (
     Divisible(divide, conquer), Decidable(lose, choose))
 import Data.Monoid (Monoid(mempty, mappend))
+import Data.Semigroup
 import Data.Void (absurd)
 import Pipes (MonadIO(liftIO), yield, await, Producer', Consumer')
 import System.Mem (performGC)
@@ -81,9 +82,14 @@
     mzero = empty
     mplus = (<|>)
 
+instance Semigroup (Input a) where
+    (<>) = (<|>)
+
 instance Monoid (Input a) where
     mempty = empty
-    mappend = (<|>)
+#if !(MIN_VERSION_base(4,11,0))
+    mappend = (<>)
+#endif
 
 {-| An exhaustible sink of values
 
@@ -92,9 +98,14 @@
 newtype Output a = Output {
     send :: a -> S.STM Bool }
 
+instance Semigroup (Output a) where
+    i1 <> i2 = Output (\a -> (||) <$> send i1 a <*> send i2 a)
+
 instance Monoid (Output a) where
     mempty  = Output (\_ -> return False)
-    mappend i1 i2 = Output (\a -> (||) <$> send i1 a <*> send i2 a)
+#if !(MIN_VERSION_base(4,11,0))
+    mappend = (<>)
+#endif
 
 -- | This instance is useful for creating new tagged address, similar to elm's
 -- Signal.forwardTo. In fact elm's forwardTo is just 'flip contramap'
